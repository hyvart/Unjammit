# Expected variables:
#   - Release.Phase # Can't use?
#   - Job.VmImage
# Expected variables (macOS, iOS):
#   - BundleId
#   - BundleName
#   - TeamId

name: $(BuildId)

trigger:
  branches:
    include:
      - master
      - release/alpha/*

variables:
  - group: Build - Global
  - name: Release.Phase
    value: Alpha
  - name: BuildConfiguration
    value: Release
  - group: Distribute - Global
  - group: Distribute - Alpha

stages:
  - stage: Publish

    jobs:
      - job: SetUp
        steps:
          - task: PowerShell@2
            displayName: Set global version
            name: SetBuildVersion
            inputs:
              targetType: inline
              script: |
                $version = $(Get-Date -Date ([datetime]::UtcNow) -Format 'yyyy.MMdd.HHmm.ss')
                Write-Host "##vso[task.setvariable variable=BuildVersion;isOutput=true]$version"

      - job:
        displayName: macOS
        dependsOn: SetUp

        variables:
          - group: Build - macOS
          - group: Distribute - Alpha - Apple
          - group: Distribute - Alpha - macOS
          - name: BuildPlatform
            value: AnyCPU
          - name: BuildVersion
            value: $[ dependencies.SetUp.outputs['SetBuildVersion.BuildVersion'] ]

        pool:
          vmImage: $(Job.VmImage)

        steps:
          - template: Templates/PublishMacOSSteps.yml
            parameters:
              phase: Alpha

          - task: Bash@3
            displayName: Create Disk Image
            inputs:
              targetType: inline
              script: |
                echo "Input: Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.macOS/Unjammit.app"
                echo "Renaming"
                mv Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.macOS/Unjammit.app \
                  "Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.macOS/Unjammit Alpha.app"
                echo "Output: $(Build.ArtifactStagingDirectory)/Unjammit.dmg"
                hdiutil create -format UDZO \
                  -srcfolder "$(Build.SourcesDirectory)/Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.macOS/Unjammit Alpha.app" \
                  $(Build.ArtifactStagingDirectory)/Unjammit.dmg

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifact: macOS-Alpha'
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: macOS-Alpha
              publishLocation: Container

      - job:
        displayName: iOS
        dependsOn: SetUp

        variables:
          - group: Build - iOS
          - group: Distribute - Alpha - Apple
          - group: Distribute - Alpha - iOS
          - name: BuildPlatform
            value: iPhone
          - name: BuildConfiguration
            value: Ad-Hoc
          - name: BuildVersion
            value: $[ dependencies.SetUp.outputs['SetBuildVersion.BuildVersion'] ]

        pool:
          vmImage: $(Job.VmImage)

        steps:
          - template: Templates/PublishiOSSteps.yml
            parameters:
              phase: Alpha

          - task: CopyFiles@2
            displayName: Stage IPA
            inputs:
              SourceFolder: $(Build.SourcesDirectory)/Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.iOS/
              Contents: Unjammit.iOS.ipa
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifact: iOS-Alpha'
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: iOS-Alpha
              publishLocation: Container

      - job:
        displayName: Android
        dependsOn: SetUp

        variables:
          - group: Build - Android
          - group: Distribute - Alpha - Android
          - name: SigningKeyStoreFile
            value: com.unjammit.alpha.keystore
          - name: BuildPlatform
            value: AnyCPU
          - name: BuildVersion
            value: $[ dependencies.SetUp.outputs['SetBuildVersion.BuildVersion'] ]

        pool:
          vmImage: $(Job.VmImage)

        steps:
          - template: Templates/PublishAndroidSteps.yml
            parameters:
              phase: Alpha

          - task: CopyFiles@2
            displayName: Stage APK
            inputs:
              SourceFolder: $(Build.SourcesDirectory)/Target/$(BuildPlatform)/$(BuildConfiguration)/Unjammit.Android/
              Contents: $(PackageName).apk
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifact: Android-Alpha'
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: Android-Alpha
              publishLocation: Container

      - job:
        displayName: Windows
        dependsOn: SetUp

        variables:
          - group: Build - Windows
          - group: Distribute - Alpha - Windows
          - name: BuildPlatform
            value: x64
          - name: BuildVersion
            value: $[ dependencies.SetUp.outputs['SetBuildVersion.BuildVersion'] ]

        pool:
          vmImage: $(Job.VmImage)

        steps:
          - template: Templates/PublishWindowsSteps.yml
            parameters:
              phase: Alpha

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifact: Windows-Alpha'
            inputs:
              PathtoPublish: $(Build.StagingDirectory)
              ArtifactName: Windows-Alpha
              publishLocation: Container

  - stage: Deploy
    dependsOn:
      - Publish

    jobs:
      # - job:
      #   displayName: Deploy macOS

      #   variables:
      #     - group: Distribute - Alpha - macOS

      #   steps:
      #     - checkout: none

      #     - task: DownloadBuildArtifacts@0
      #       displayName: Download macOS-Alpha
      #       inputs:
      #         buildType: current
      #         artifactName: macOS-Alpha

      #     - task: AppCenterDistribute@3
      #       displayName: Distribute in App Center
      #       inputs:
      #         serverEndpoint: App Center - Hyvart
      #         appSlug: hyvart/Unjammit-macOS
      #         appFile: $(System.ArtifactsDirectory)/macOS-Alpha/Unjammit.dmg
      #         releaseNotesOption: input
      #         releaseNotesInput: Alpha Build
      #         isMandatory: true
      #         destinationType: groups
      #         distributionGroupId: $(AppCenter.DG.Public),$(AppCenter.DG)
      #         isSilent: false

      - job:
        displayName: Deploy iOS

        variables:
          - group: Distribute - Alpha - iOS

        steps:
          - checkout: none

          - task: DownloadBuildArtifacts@0
            displayName: Download iOS-Alpha
            inputs:
              buildType: current
              artifactName: iOS-Alpha

          - task: AppCenterDistribute@3
            displayName: Distribute in App Center
            inputs:
              serverEndpoint: App Center - Hyvart
              appSlug: hyvart/Unjammit
              appFile: $(System.ArtifactsDirectory)/iOS-Alpha/Unjammit.iOS.ipa
              releaseNotesOption: input
              releaseNotesInput: Alpha Build
              isMandatory: true
              destinationType: groups
              distributionGroupId: $(AppCenter.DG.Public),$(AppCenter.DG)
              isSilent: false

      - job:
        displayName: Deploy Android

        variables:
          - group: Distribute - Alpha - Android

        steps:
          - checkout: none

          - task: DownloadBuildArtifacts@0
            displayName: Download Android-Alpha
            inputs:
              buildType: current
              artifactName: Android-Alpha

          - task: AppCenterDistribute@3
            displayName: Distribute in App Center
            inputs:
              serverEndpoint: App Center - Hyvart
              appSlug: hyvart/Unjammit-Android
              appFile: $(System.ArtifactsDirectory)/Android-Alpha/$(PackageName).apk
              releaseNotesOption: input
              releaseNotesInput: Alpha Build
              isMandatory: true
              destinationType: groups
              distributionGroupId: $(AppCenter.DG.Public),$(AppCenter.DG)
              isSilent: false

      - job:
        displayName: Deploy Windows

        variables:
          - group: Distribute - Alpha - Windows

        steps:
          - checkout: none

          - task: DownloadBuildArtifacts@0
            displayName: Download Windows-Alpha
            inputs:
              buildType: current
              artifactName: Windows-Alpha

          - task: AppCenterDistribute@3
            displayName: Distribute in App Center
            inputs:
              serverEndpoint: App Center - Hyvart
              appSlug: hyvart/Unjammit-UWP
              appFile: $(System.ArtifactsDirectory)/Windows-Alpha/AppPackages/*.appxupload
              releaseNotesOption: input
              releaseNotesInput: Alpha Build
              isMandatory: true
              destinationType: groups
              distributionGroupId: $(AppCenter.DG.Public),$(AppCenter.DG)
              isSilent: false
