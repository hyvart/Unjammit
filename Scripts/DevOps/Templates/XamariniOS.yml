# Expected variables:
#   - DotNetCoreSdk.Version
#   - XamariniOS.MonoVersion

parameters:
  # name:
  displayName:
  project:
  platformVariableGroup: ''
  buildConfigurations: [ Debug, Release ]

  # XamariniOS
  packageApp: false
  buildForSimulator: true
  xcodeArguments: ''
  signingIdentity: ''
  signingProvisioningProfileID: ''

  debug: false

jobs:
  - job: #${{ parameters.name }}
    displayName: ${{ parameters.displayName }}

    variables:
      - group: ${{ parameters.platformVariableGroup }}

    pool:
      vmImage: $(Job.VmImage)

    strategy:
      matrix:
        ${{ each configuration in parameters.buildConfigurations }}:
            "${{ configuration }}":
              BuildConfiguration: ${{ configuration }}

    steps:
      - bash: |
          /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh ${XAMARINIOS_MONOVERSION}"
        displayName: Set Xamarin version set to $(XamariniOS.MonoVersion)

      - task: DotNetCoreInstaller@1
        inputs:
          packageType: sdk
          version: $(DotNetCoreSdk.Version)

      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: $(DotNetCoreSdk.Version)

      - task: MSBuild@1
        displayName: Restore Packages
        inputs:
          solution: ${{ parameters.project }}
          msbuildArchitecture: $(MSBuild.MSBuildArchitecture)
          msbuildArguments: /t:Restore

      - task: XamariniOS@2
        displayName: Build ${{ parameters.project }}
        inputs:
          solutionFile: ${{ parameters.project }}
          configuration: $(BuildConfiguration)
          clean: true
          packageApp: ${{ parameters.packageApp }}
          buildForSimulator: ${{ parameters.buildForSimulator }}
          args: ${{ parameters.xcodeArguments }}
          signingIdentity: ${{ parameters.signingIdentity }}
          signingProvisioningProfileID: ${{ parameters.signingProvisioningProfileID }}
