# Expected variables:
#   - DotNetCoreSdk.Version
#   - XamariniOS.MonoVersion

parameters:
  # name:
  - name: displayName
  - name: project
  - name: platformVariableGroup
  - name: buildConfigurations
    type: object
    default: [ Debug, Release ]

  # XamariniOS
  - name: packageApp
    default: false
  - name: buildForSimulator
    default: true
  - name: xcodeArguments
    default: ''
  - name: signingIdentity
    default: ''
  - name: signingProvisioningProfileID
    default: ''

jobs:
  - job: #${{ parameters.name }}
    displayName: ${{ parameters.displayName }}

    variables:
      - group: Build - Apple
      - group: ${{ parameters.platformVariableGroup }}

    pool:
      vmImage: $(Job.VmImage)

    strategy:
      matrix:
        ${{ each configuration in parameters.buildConfigurations }}:
          "${{ configuration }}":
            BuildConfiguration: ${{configuration}}

    steps:
      - bash: |
          /bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh ${XAMARINIOS_MONOVERSION}"
        displayName: Set Xamarin version set to $(XamariniOS.MonoVersion)

      - bash: |
          echo "Xcode version: [${XCODE_VERSION}]"
          echo "Xcode location: {"
          ls -ld /Applications/Xcode_${XCODE_VERSION}.app
          echo "}"

          echo "##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]/Applications/Xcode_${XCODE_VERSION}.app"
          sudo xcode-select --switch /Applications/Xcode_${XCODE_VERSION}.app/Contents/Developer
        displayName: Select Xcode version $(Xcode.Version)

      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: $(DotNetCoreSdk.Version)

      - task: MSBuild@1
        displayName: Restore Packages
        inputs:
          solution: ${{ parameters.project }}
          msbuildArchitecture: $(MSBuild.MSBuildArchitecture)
          platform: iPhoneSimulator
          msbuildArguments:
            /t:Restore
            /p:Configuration=$(BuildConfiguration)

      - task: XamariniOS@2
        displayName: Build ${{ parameters.project }}
        inputs:
          clean: false
          solutionFile: ${{ parameters.project }}
          configuration: $(BuildConfiguration)
          packageApp: ${{ parameters.packageApp }}
          buildForSimulator: ${{ parameters.buildForSimulator }}
          args: ${{ parameters.xcodeArguments }}
          signingIdentity: ${{ parameters.signingIdentity }}
          signingProvisioningProfileID: ${{ parameters.signingProvisioningProfileID }}
